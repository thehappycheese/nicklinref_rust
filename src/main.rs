use std::{net::SocketAddr, error::Error};
use clap::Parser;

mod helpers;
mod routes;
mod data;
mod settings;

use settings::Settings;


#[tokio::main]
async fn main() -> Result<(), Box<dyn Error>> {
    
    // Read settings from command line (or environment variables)
    // see run with --help to see nice instructions generated by clap
    let settings:Settings = Settings::parse();

    let filter = routes::load_data_and_get_combined_routes(&settings).await?;

    // Serve
    let address:SocketAddr = (settings.NLR_ADDR, settings.NLR_PORT).into();
    println!("Serving at {:?}", address);
    warp::serve(filter).run(address).await;

    Ok(())
}
